-- -*- mode: lua; -*-

--[[
   #=====================================================================================
   #                               aureola
   # Date    : 27/01/2018
   # Author  : Erik Dubois at http://www.erikdubois.be
   # Version : v2.0.3
   # License : Distributed under the terms of GNU GPL version 2 or later
   # Documentation : http://erikdubois.be/category/linux/aureola/
   #======================================================================================

   #======================================================================================
   #
   # Source : https://github.com/akshendra/octupi-conky from akshendra octupi
   #
   #======================================================================================


]]

conky.config = {

   --Various settings

   background = true, 							-- forked to background
   cpu_avg_samples = 2,
   diskio_avg_samples = 10,
   double_buffer = true,
   if_up_strictness = 'address',
   net_avg_samples = 2,
   no_buffers = true,
   temperature_unit = 'celsius',
   text_buffer_size = 2048,
   update_interval = 3,
   imlib_cache_size = 0,                       --spotify cove

   --Placement for 1920x1080

   alignment = 'middle_middle', 					--middle_middle if you have only one screen
   gap_x = 250,
   gap_y = 160,
   minimum_height = 900,
   minimum_width = 1600,
   maximum_width = 1600,

   --Graphical

   border_inner_margin = 10, 					-- margin between border and text
   border_outer_margin = 1, 					-- margin between border and edge of window
   border_width = 0, 							-- border width in pixels
   default_bar_width = 280,
   default_bar_height = 10,
   default_gauge_height = 25,
   default_gauge_width =40,
   default_graph_height = 40,
   default_graph_width = 153,
   default_shade_color = '#000000',
   default_outline_color = '#000000',
   draw_borders = false,						--draw borders around text
   draw_graph_borders = true,
   draw_shades = false,
   draw_outline = false,
   stippled_borders = 0,

   --Textual

   extra_newline = false,
   format_human_readable = true,
   font = 'Ubuntu Mono:size=12:oblique',
   max_text_width = 0,
   max_user_text = 16384,
   override_utf8_locale = true,
   short_units = true,
   top_name_width = 21,
   top_name_verbose = false,
   uppercase = false,
   use_spacer = 'none',
   use_xft = true,
   xftalpha = 1,

   --Windows

   own_window = true,
   own_window_argb_value = 150,				-- put 0 to have no black background anymore
   own_window_argb_visual = true,
   own_window_class = 'Conky',
   own_window_colour = '#000000',
   own_window_hints = 'undecorated,below,skip_taskbar,skip_pager',
   own_window_transparent = no,
   own_window_title = 'system_conky',
   own_window_type = 'normal',-- # options are: normal/override/dock/desktop/panel


   --Colours

   default_color = '#000000',  				-- default color and border color
   color1 = '#FFFFFF',
   color2 = '#AAAAAA',
   color3 = '#888888',
   color4 = '#BDBDBD',
   color5 = '#CCCCCC',
   color6 = '#FFFFFF',

   --Signal Colours
   color7 = '#1F7411',  --green
   color8 = '#FFA726',  --orange
   color9 = '#F1544B',  --firebrick


   --Lua
   lua_load = '~/.config/conky/main-900.lua',
   lua_draw_hook_pre = 'main',
   lua_startup_hook = 'setup',


   -- -------------------------------------
   -- --  Color Scheme
   -- -------------------------------------
   default_color="FFFFFF",

   color0="FFFFFF",  --  hours
   color1="FFFFFF",  --  clock dots
   color2="FFFFFF",  --  minutes
   color3="FFFFFF",  --  week day
   color4="FFFFFF",  --  month day
   color5="FFFFFF",  --  month
   color6="FFFFFF",  --  current temp
   color7="FFFFFF",  --  min temp
   color8="FFFFFF",  --  max temp
   color9="FFFFFF",  --  current conditions


   -------------------------------------
   --  Icon Sources
   -------------------------------------
   template0="~/.jelly-conky/#fff__64",


   -------------------------------------
   --  API Key
   -------------------------------------
   template6="8a8564f7998647c17134b7ba5fad57eb",  -- please use your API key instead


   -------------------------------------
   --  City ID
   -------------------------------------
   template7="1816670",  --beijing


   -------------------------------------
   --  Temp Unit (default, metric, imperial)
   -------------------------------------
   template8="metric",


   -------------------------------------
   --  Locale (e.g. "es_ES.UTF-8")
   --  Leave empty for default
   -------------------------------------
   template9=""
};

conky.text = [[
#This is meant to be viewed on a dual screen with resolution of 1920x1080 .
\
\
${execi 300 ~/.jelly-conky/get_weather ${template6} ${template7} ${template8} ${template9}}\
\
\
\
\
${font Roboto :size=64}${color0}\
${alignc}${time %H}\
\
\
\
\
${font Roboto Thin :size=64}${color1}:\
\
\
\
\
${font Roboto Thin :size=64}${color2}\
${time %M}${font}${color}
\
\
\
\
${font Roboto Light :size=16}${color3}\
${voffset 12}${alignc}${execi 300 LANG=${template9} LC_TIME=${template9} date +"%A"}${color}, \
\
\
\
\
${font Roboto :size=16}${color4}\
${alignc}${execi 300 LANG=${template9} LC_TIME=${template9} date +"%d"}${color} \
\
\
\
\
${font Roboto Light :size=16}${color5}\
${alignc}${execi 300 LANG=${template9} LC_TIME=${template9} date +"%B"}${font}${color}
\
\
\
\
${font Roboto Light :size=24}${color6}\
${alignc}${offset -80}${voffset 18}\
${execi 300 jq ".main.temp" ~/.cache/jelly-conky/weather.json | awk '{print int($1+0.5)}' # round num}°${font}${color}
\
\
\
\
${font Roboto Light :size=12}\
${alignc}${offset -80}${voffset 5}\
${color7}${execi 300 ~/.jelly-conky/parse_weather 'avg' '.main.temp_min' '0'}° ${color}| \
${color8}${execi 300 ~/.jelly-conky/parse_weather 'avg' '.main.temp_max' '0'}°${font}${color}
\
\
\
\
${font Roboto Light :size=12}${color9}\
${alignc}${offset -10}${voffset 5}\
${execi 300 jq -r ".weather[0].description" ~/.cache/jelly-conky/weather.json}${font}${color}
\
\
\
${if_match "${execi 300 xdpyinfo | grep dimensions | sed -r 's/^[^0-9]*([0-9]+x[0-9]+).*$/\1/'}" == "1600x900"} ${execi 300 cp -f ${template0}/$(jq .weather[0].id ~/.cache/jelly-conky/weather.json).png ~/.cache/jelly-conky/current.png} ${image ~/.cache/jelly-conky/current.png -p 760,150 -s 64x64} $endif\
${if_match "${execi 300 xdpyinfo | grep dimensions | sed -r 's/^[^0-9]*([0-9]+x[0-9]+).*$/\1/'}" == "1920x1080"} ${execi 300 cp -f ${template0}/$(jq .weather[0].id ~/.cache/jelly-conky/weather.json).png ~/.cache/jelly-conky/current.png} ${image ~/.cache/jelly-conky/current.png -p 760,150 -s 64x64}$endif\
]]
