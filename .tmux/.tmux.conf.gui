#' -*- mode:conf -*-

set -g default-terminal "xterm-tmux-24bits"
set -ga terminal-overrides ",xterm-*:Tc"
set -g escape-time 0
set -g focus-events on
set -g xterm-keys on
set -g base-index 1
set -g pane-base-index 1
set -g automatic-rename on
set -g aggressive-resize on
set -g visual-bell off

set-option -g update-environment "DIRENV_DIFF DIRENV_DIR DIRENV_WATCHES"
set-environment -gu DIRENV_DIFF
set-environment -gu DIRENV_DIR
set-environment -gu DIRENV_WATCHES
set-environment -gu DIRENV_LAYOUT

set -g history-limit 10000
set -g set-titles off
set -g mouse on
set -g mode-keys vi
set -g repeat-time 600
set -g renumber-windows on
set -g display-panes-time 800
set -g display-time 1000
set -g monitor-activity on
set -g visual-activity off
set -g wrap-search off
set -g status-interval 1

set -g mode-style "bg=colour0, fg=colour6"
set -g message-style "bg=#00346e, fg=#ffffd7"
set -g status-style "bg=#222222, fg=#ffffd7"
set -g status-left "#[bg=#009aff] ❐ #S "
set -g status-left-length 400
set -g status-right "#{?client_prefix, #[bg=#778833] PREFIX,}#{?pane_synchronized, #[bg=#008844] SYNC,} #[bg=#009aff] #(whoami)@#h #[bg=#881100] %Y-%m-%d %H:%M "
set -g status-right-length 600

set -g window-status-format " #I #W#{?window_zoomed_flag, [max],} "
set -g window-status-current-format " #I #W#{?window_zoomed_flag, [max],} "
set -g window-status-separator ""
set -g window-status-current-style "bg=#881100"
set -g window-status-last-style "fg=#ee4488"
set -g window-status-activity-style "underscore"
set -g window-active-style 'bg=#141414'

set -g pane-active-border-style "fg=#009aff"
set -g pane-border-style "fg=#585858"
set -g pane-border-status top
set -g pane-border-format "#{?#{==:#{pane_current_command},ssh},ssh session,#[bold,fg=#dddddd,bg=#009aff]#{pane_current_path}}"

set -g prefix C-x
set -g prefix2 C-x
bind 1 resize-pane -Z
bind 2 split-window -v -c '#{pane_current_path}'
bind 3 split-window -h -c '#{pane_current_path}'
bind C-x send-prefix
bind C-c detach-client
bind r source-file /home/amos/.tmux/.tmux.conf.gui \; display '/home/amos/.tmux/.tmux.conf.gui sourced'
bind c new-window
bind d kill-pane
bind e run-shell /home/amos/scripts/edittmuxpane
bind u run-shell /home/amos/scripts/uploadtmuxpane
bind k run-shell /home/amos/scripts/tmuxkillwindow
bind C-k run-shell /home/amos/scripts/tmuxkillwindow

bind -Tcopy-mode-vi C-] send -X copy-selection-and-cancel
bind -Tcopy-mode-vi y send -X copy-selection
bind -Tcopy-mode-vi q send -X clear-selection
unbind -Tcopy-mode-vi MouseDragEnd1Pane
bind -Tcopy-mode-vi TripleClick1Pane send -X select-line
bind -Tcopy-mode-vi v send-keys -X begin-selection
bind -Tcopy-mode-vi C-v send-keys -X rectangle-toggle
bind -Tcopy-mode-vi d send-keys -X halfpage-down
bind -Tcopy-mode-vi u send-keys -X halfpage-up
bind -Tcopy-mode-vi M-v send-keys -X halfpage-up
bind -Tcopy-mode-vi H resize-pane -L 5
bind -Tcopy-mode-vi J resize-pane -D 5
bind -Tcopy-mode-vi K resize-pane -U 5
bind -Tcopy-mode-vi L resize-pane -R 5
bind -Tcopy-mode-vi C-g send -X cancel

# need to add all needed root table's key bindings
set -g key-table gui

set -g user-keys[0] "\e[70~"
# URxvt.keysym.C-Return:      \033[5;30010~
bind-key -T gui User0 send-keys Enter
# URxvt.keysym.C-S:           \033[5;30015~
bind-key -T gui S-F4 send-keys C-s
# URxvt.keysym.C-D:           \033[5;30016~
bind-key -T gui S-F5 send-keys C-d
# URxvt.keysym.C-J:           \033[5;30017~
bind-key -T gui S-F6 send-keys C-j
# URxvt.keysym.M-S-BackSpace: \033[5;30018~
bind-key -T gui S-F6 send-keys C-j
# URxvt.keysym.M-S-BackSpace: \033[5;30011~
bind-key -T gui S-F7 send-keys M-BSpace
# URxvt.keysym.Shift-Return:  \033[5;30012~
bind-key -T gui S-F8 send-keys Enter
# URxvt.keysym.C-comma:       \033[5;30013~
bind-key -T gui S-F9 previous-window
# URxvt.keysym.C-period:      \033[5;30014~
bind-key -T gui S-F10 next-window

bind-key -T gui S-F12 send-keys C-]

bind-key -T gui f12 display
bind-key -T gui DoubleClick1Pane copy-mode\; send -X select-word
bind-key -T gui C-] send-keys Escape
bind-key -T gui C-j run-shell 'T=$(tmux display -p "#{pane_tty}" | sed "s=/dev/=="); if pgrep -t$T "emacsclient" &> /dev/null; then tmux send-key C-j; else tmux send-keys Down; fi'
bind-key -T gui C-k run-shell 'T=$(tmux display -p "#{pane_tty}" | sed "s=/dev/=="); if pgrep -t$T "emacsclient" &> /dev/null; then tmux send-key C-k; else tmux send-keys Up; fi'
bind-key -T gui M-1 select-window -t 1
bind-key -T gui M-2 select-window -t 2
bind-key -T gui M-3 select-window -t 3
bind-key -T gui M-4 select-window -t 4
bind-key -T gui M-5 select-window -t 5
bind-key -T gui M-6 select-window -t 6
bind-key -T gui M-7 select-window -t 7
bind-key -T gui M-8 select-window -t 8
bind-key -T gui M-9 select-window -t 9
bind-key -T gui M-h select-pane -L
bind-key -T gui M-j select-pane -D
bind-key -T gui M-k select-pane -U
bind-key -T gui M-l select-pane -R
# bind-key -T gui C-@ run-shell "fish -c 'i3focus right (tmux display -p \"#{pane_tty}\")'"
bind-key -T gui M-H swap-pane -s '{left-of}'
bind-key -T gui M-J swap-pane -s '{down-of}'
bind-key -T gui M-K swap-pane -s '{up-of}'
bind-key -T gui M-L swap-pane -s '{right-of}'
bind-key -T gui MouseDown1Pane   select-pane -t = \; send-keys -M
bind-key -T gui MouseDown1Status select-window -t =
# bind-key -T gui MouseDown3Pane   if-shell -F -t = "#{mouse_any_flag}" "select-pane -t=\; send-keys -M" "select-pane -mt="
bind-key -T gui MouseDrag1Pane   if-shell -F -t = "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"" "copy-mode -M"
bind-key -T gui MouseDrag1Border resize-pane -M
bind-key -T gui WheelUpPane      if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"copy-mode -et=\""
bind-key -T gui WheelUpStatus    previous-window
bind-key -T gui WheelDownStatus  next-window
bind-key -T gui C-l send-keys C-l
bind-key -T gui M-v run-shell 'T=$(tmux display -p "#{pane_tty}" | sed "s=/dev/=="); if pgrep -t$T "gdb" &> /dev/null; then tmux send-key PageUp; else tmux send-key M-v; fi'
# bind-key -T gui M-v run-shell 'T=$(tmux display -p "#{pane_tty}" | sed "s=/dev/=="); if pgrep -t$T "fzf|vim|elvish" &> /dev/null; then tmux send-key M-v; elif pgrep -t$T "gdb" &> /dev/null; then tmux send-key PageUp; else tmux copy-mode; fi'
bind-key -T gui C-o run-shell 'T=$(tmux display -p "#{pane_tty}" | sed "s=/dev/=="); if pgrep -t$T "cgdb|vim|gdb|kui_driver" &> /dev/null; then tmux send-key C-o; else tmux send-keys C-k; fi'
bind-key -T gui C-v run-shell 'T=$(tmux display -p "#{pane_tty}" | sed "s=/dev/=="); if pgrep -t$T "fzf|vim|elvish" &> /dev/null; then tmux send-key C-v; elif pgrep -t$T "gdb" &> /dev/null; then tmux send-key PageDown; else tmux copy-mode; fi'

bind-key -T gui M-u copy-mode\; send -X cursor-up\; send -X search-backward ❯
bind-key -T gui M-s copy-mode\; command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""
bind-key -Tcopy-mode-vi M-s command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""
bind-key -Tcopy-mode-vi M-u send -X search-backward ❯
bind-key -Tcopy-mode-vi M-n send -X search-forward ❯
bind-key -T gui M-- set synchronize-panes
bind-key -T gui M-"'" send-keys "'"{}"'" Left Left

set -g word-separators "‘’ ='`;+|[](){},?\\\\\"⏎❯"
bind-key -T gui MouseDown3Pane select-pane \; copy-mode \; send -X clear-selection \; send -l lbve \; send -X stop-selection\; send -X copy-pipe-and-cancel "echo"\; set-buffer -b "amos" -a " "\; paste-buffer -b "amos"

bind-key -T gui C-Space run-shell 'fish -c tmuxtokenize.pl'
