# requires: https://github.com/cyrus-and/gdb-dashboard
#
python
class AmosCommand(gdb.Command):

    def __init__(self):
        gdb.Command.__init__(self, 'amos',
                             gdb.COMMAND_USER, gdb.COMPLETE_FILENAME)

    def invoke(self, arg, from_tty):
        arg = Dashboard.parse_arg(arg)
        for thread in gdb.Inferior.threads(gdb.selected_inferior()):
            if thread.is_stopped():
                run("thread {}".format(thread.num))

AmosCommand()
end

# enable auto-load
set auto-load safe-path /

# prefer Intel assembly syntax
set disassembly-flavor intel

# GDB dashboard defaults
dashboard -layout stack expressions threads registers
dashboard -style syntax_highlighting 'monokai'
dashboard source -style context 20
dashboard assembly -style context 5
dashboard stack -style compact True
dashboard stack -style limit 3
dashboard threads -style skip-running True
set opaque-type-resolution off
set history filename ~/.gdb_history
set history save on
set history remove-duplicates 5000
alias -a w = dashboard expressions watch
alias -a W = dashboard expressions unwatch

# set auto-solib-add off

# useful auto-redraw hooks

define hookpost-up
  dashboard
end

define hookpost-down
  dashboard
end

define hookpost-frame
  dashboard
end

define hookpost-stop
  dashboard
end

define hookpost-continue
  amos
end

define hookpost-thread
  dashboard
end

# handle SIGTSTP noprint nostop pass
# handle SIGQUIT noprint nostop pass
# handle SIGINT noprint nostop pass

# set $dlopen = (void*(*)(char*, int)) dlopen
# call $dlopen("/home/amos/git/luakit/lualib.so", 1)

# set scheduler-locking off

set target-async 1
set pagination off
set non-stop on
set confirm off
# Finally, turn it on!

skip -gfi /usr/include/c++/*/*/*
skip -gfi /usr/local/include/c++/*/*/*
