#!/usr/bin/env bash

url=$1

exec /usr/bin/vivaldi-stable  --proxy-pac-url=https://gist.githubusercontent.com/amosbird/4da9eab5f3ea9322bfb1a69cd5aa57ec/raw/7c77f21ada04cd3b19277f717a3ab92cd4a6bdf5/amos.pac "$@"

exists() { [[ -e "$1" ]]; }
shopt -s nullglob
if ! pgrep -f qutebrowser >/dev/null; then
	find /run/user/1000/qutebrowser/ -type f -delete
	cd /home/amos/git/qutebrowser/
	# /usr/bin/python -m qutebrowser -l vdebug &
	# /usr/bin/python -m qutebrowser &
	export QTWEBENGINE_CHROMIUM_FLAGS=--proxy-pac-url=file:///home/amos/git/serverconfig/amos.pac
	export QTWEBENGINEPROCESS_PATH=/usr/lib/qt6/chrome
	/usr/bin/python -m qutebrowser >/tmp/qb.log 2>&1 &
	# .venv-qt6/bin/qutebrowser > /tmp/qb.log 2>&1 &
	mkdir -p /run/user/1000/qutebrowser
	while read -r && [[ $REPLY != *ATTRIB\ ipc-* ]]; do break; done < <(inotifywait -m -t 5 -e create /run/user/1000/qutebrowser)
fi

socket=(/run/user/1000/qutebrowser/*)
flag=no
while read -r wid; do
	str=$(xprop -id "$wid" WM_CLASS 2>/dev/null)
	if [[ $str == *qutebrowser* ]]; then
		flag="last"
		break
	fi
done < <(bspc query -N -d focused -n .!hidden)

if [ -n "$2" ]; then
	type=tab-silent
elif [[ "$flag" == last ]]; then
	type=last-visible
else
	type=window
fi

jq -c -n --argjson url "\"$url\"" --argjson type "\"$type\"" '
{
    "args":[$url],
    "target_arg":$type,
    "protocol_version":1
}' | socat - UNIX-CONNECT:"${socket[0]}"
