#!/usr/bin/env python2

import re
import urllib2
import sys
import argparse
import math
import textwrap

def generate_mac():
    results=fetch_ip_data()

    upscript_header=textwrap.dedent("""\
    route add 10.0.0.0/8 via GATEWAY table cn
    route add 192.168.0.0/16 via GATEWAY table cn
    """)

    upfile=open('/home/amos/.routefile','w')

    upfile.write(upscript_header)
    upfile.write('\n')

    for ip,_,mask in results:
        upfile.write('route add %s/%s via GATEWAY table cn\n'%(ip,mask))

    upfile.close()

def fetch_ip_data():
    url=r'https://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest'
    data=urllib2.urlopen(url).read()

    cnregex=re.compile(r'apnic\|cn\|ipv4\|[0-9\.]+\|[0-9]+\|[0-9]+\|a.*',re.IGNORECASE)
    cndata=cnregex.findall(data)

    results=[]

    for item in cndata:
        unit_items=item.split('|')
        starting_ip=unit_items[3]
        num_ip=int(unit_items[4])

        imask=0xffffffff^(num_ip-1)
        #convert to string
        imask=hex(imask)[2:]
        mask=[0]*4
        mask[0]=imask[0:2]
        mask[1]=imask[2:4]
        mask[2]=imask[4:6]
        mask[3]=imask[6:8]

        #convert str to int
        mask=[ int(i,16 ) for i in mask]
        mask="%d.%d.%d.%d"%tuple(mask)

        #mask in *nix format
        mask2=32-int(math.log(num_ip,2))

        results.append((starting_ip,mask,mask2))

    return results


if __name__=='__main__':
    generate_mac()
