#!/usr/bin/env bash

# source bashlog
# set -x

output=$(ip r l table cn | wc -l)

if [ "$output" -gt 30 ]
then
    exit 0
fi

die() {
    echo "$*" 1>&2
    exit 1
}

# ((UID == 0)) || [[ -n "$SUDO_UID" ]] || exec sudo "$0" "$@" || exit

# Get a list of network interfaces in /sys/class/net
interfaces=$(ls /sys/class/net)

# Initialize an empty array to store non-virtual interfaces
non_virtual_interfaces=()

# Iterate through each interface
for interface in $interfaces; do
    # Get the real path of the interface
    real_path=$(readlink -f "/sys/class/net/$interface")

    # Check if the real path is under /sys/devices/virtual/
    if [[ $real_path == "/sys/devices/virtual/"* ]]; then
        continue  # Skip virtual interfaces
    fi

    # Add non-virtual interfaces to the array
    non_virtual_interfaces+=("$interface")
done

for interface in "${non_virtual_interfaces[@]}"; do
    read -r _ _ gw _ < <(ip r g 123.206.66.49 oif $interface)
    if [ -n "$gw" ]; then
        echo $interface
        break
    fi
done

if [ -z "$gw" ]; then
    die "Cannot get default gw"
fi

sudo ip r f table cn

sudo ip rule add table cn pref 4000

tid=$(id -u tinyproxy)
if [ -n "$tid" ]; then
    sudo ip rule add uidrange $tid-$tid lookup main pref 4001
fi

while read -r subnet _ d; do
    sudo ip r a $subnet dev $d table cn
    :
done < <(ip route show table main scope link)

sudo ip -batch - <<EOF
$(sed "s/GATEWAY/$gw/" $HOME/.routefile)
EOF

sudo ip r a 10.0.0.0/8 via $gw table cn
sudo ip r a 192.168.0.0/16 via $gw table cn
sudo ip r a 172.16.0.0/12 via $gw table cn
sudo ip r a 127.0.0.0/8 via $gw table cn

for h in $(pass show vps_ip_list)
do
    sudo ip r a $h via $gw table cn
done

# systemctl restart dnsmasq
DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus notify-send -a "Routes" "Routes Updated"
