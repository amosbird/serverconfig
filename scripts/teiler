#!/bin/bash

encoder=ffmpeg
res=800x600

# webm
border="-show_region 1"
encopts="-c:v vp8 -threads 2 -pix_fmt yuv420p -crf 30 -b:v 0 -s $res"
rect_encopts="-r 30 -c:v vp8 -speed 5 -quality good -threads 2 -pix_fmt yuv420p -crf 30 -b:v 0"
ext="webm"
ffaudio=""

# gif
# border="-show_region 1"
# encopts="-r 30 -vcodec libx264 -pix_fmt yuv420p -s $res -acodec libmp3lame"
# rect_encopts="-r 8"
# ext="gif"
# ffaudio=""
#

# mp4
# border="-show_region 1"
# encopts="-r 30 -vcodec libx264 -pix_fmt yuv420p -s $res -acodec libmp3lame"
# rect_encopts="-r 30 -c:v libx264 -preset slow -crf 18 -c:a libvorbis"
# ext="mp4"
# ffaudio=""

# with audio
# ffaudio="-f alsa -ac 2 -i pulse"

random_string=$(date +'%Y-%m-%d-%H%M%S')
vid_filemask=vid-$random_string
vid_path=$HOME/Videos/Screencasts
vid_filemask="${vid_filemask}.${ext}"
SCREENCAST_PIDFILE=/tmp/$USER-teiler-screencast.pid

isRecording() { [[ -f "$SCREENCAST_PIDFILE" ]] || return 1; }

stopRecording() {
    local pid
    res=$(cat /tmp/teiler_res)
    [[ -f $SCREENCAST_PIDFILE ]] && {
        pid=$(cat "$SCREENCAST_PIDFILE")
        isRecording && kill "$pid"
        rm "$SCREENCAST_PIDFILE"
    }
    output=$(xininfo -name)
    xrandr --output "$output" --mode "$res"
    rm -f /tmp/teiler_res
    return 0
}

ffmpegCmd() {
    round() {
        echo $((${1:?need one argument} / 2 * 2))
    }

    xres=$(echo "$res" | awk -F 'x' '{ print $1 }')
    yres=$(echo "$res" | awk -F 'x' '{ print $2 }')
    res2=$res
    if [[ $1 == "fullscreen" ]]; then
        isRecording && {
            notify "$time" 'Screencast already in progress'
            echo "Already recording Screen"
            exit 1
        }
        ffmpeg_display=$(echo $DISPLAY)
        ffmpeg_offset="$(xininfo -mon-x),$(xininfo -mon-y)"
        res_now="$(echo $(xininfo -mon-size | awk '{ print $1 }')x$(xininfo -mon-size | awk '{ print $2 }'))"
        echo "$res_now" >/tmp/teiler_res
        if [[ $res_now == $res ]]; then
            echo " "
        else
            output=$(xininfo -name)
            xrandr --output "$output" --mode "$res"
            sleep 5
        fi
        [[ -f "${vid_path}/${filename}" ]] && rm "${vid_path}/${filename}"
        if [[ -z $ffaudio ]]; then
            $encoder -f x11grab ${border} -s $res2 -i $ffmpeg_display+$ffmpeg_offset $encopts "${vid_path}/${filename}" &
        else
            $encoder -f x11grab ${border} -s $res2 -i $ffmpeg_display+$ffmpeg_offset $ffaudio $encopts "${vid_path}/${filename}" &
        fi
        echo "$!" >"$SCREENCAST_PIDFILE"
        notify-send -a "teiler" -t "1" "teiler" "Screencast started"
    elif [[ $1 == "area" ]]; then
        read -r X Y W H G ID < <(slop -f "%x %y %w %h %g %i")
        X=$(round $X)
        Y=$(round $Y)
        W=$(round $W)
        H=$(round $H)
        isRecording && {
            notify "$time" 'Screencast already in progress'
            echo "Already recording Screen"
            exit 1
        }
        [ -z "$X" ] && {
            notify-send -a "teiler" "Screencast canceled"
            exit 1
        }
        ffmpeg_display=$(echo $DISPLAY)
        ffmpeg_offset=$(echo $(xininfo -mon-x),$(xininfo -mon-y))
        [[ -f "${vid_path}/${filename}" ]] && rm "${vid_path}/${filename}"
        if [[ -z $ffaudio ]]; then
            $encoder -f x11grab ${border} -s "$W"x"$H" -i $ffmpeg_display+$X,$Y $rect_encopts "${vid_path}/${filename}" &
        else
            $encoder -f x11grab ${border} -s "$W"x"$H" -i $ffmpeg_display+$X,$Y $ffaudio $rect_encopts "${vid_path}/${filename}" &
        fi
        echo "$!" >"$SCREENCAST_PIDFILE"
        notify-send -a "teiler" -t "1" "teiler" "Screencast started"
    fi
}

askPrompt() {
    filename="$(cat /tmp/__teiler_cast_name)"
    isRecording && STATE_RECORDING="Recording"
    if [[ -z "$STATE_RECORDING" ]]; then
        filename="${vid_filemask}"
        echo "${filename}" >/tmp/__teiler_cast_name
        isRecording && stopRecording && sleep 1 || ffmpegCmd area
    else
        isRecording && stopRecording && sleep 1
        ask=$(echo -e "1 Yes\n2 No" | rofi -dmenu -p "Upload? > ")
        if [[ $ask == "1 Yes" ]]; then
            cd "${vid_path}" && upload "${filename}" && rm -f /tmp/__teiler_cast_name
        elif [[ $ask == "2 No" ]]; then
            rm -f /tmp/__teiler_cast_name
        fi
    fi
}

askPrompt
